// Main Application Module
class App {
    constructor() {
        this.initialized = false;
        this.init();
    }

    async init() {
        try {
            // Show loading spinner
            this.showLoading(true);

            // Load restaurant data
            await dataManager.loadData();
            
            // Mark as initialized
            this.initialized = true;

            // Hide loading spinner
            this.showLoading(false);

            // Initialize the router (it will start automatically)
            const router = new Router();

            console.log('App initialized successfully');
            console.log(`Loaded ${dataManager.restaurants.length} restaurants`);
            console.log(`Created ${dataManager.areas.length} areas`);

        } catch (error) {
            console.error('Failed to initialize app:', error);
            this.showError('Failed to load restaurant data. Please refresh the page.');
        }
    }

    showLoading(show) {
        const loading = document.getElementById('loading');
        if (loading) {
            if (show) {
                loading.style.display = 'flex';
                loading.classList.remove('d-none');
            } else {
                loading.style.display = 'none';
                loading.classList.add('d-none');
            }
        }
    }

    showError(message) {
        document.getElementById('content').innerHTML = `
            <div class="container my-5 text-center">
                <div class="alert alert-danger" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Error:</strong> ${message}
                </div>
                <button class="btn btn-primary" onclick="location.reload()">
                    <i class="fas fa-refresh me-2"></i>Refresh Page
                </button>
            </div>
        `;
    }
}// Enhanced search functionality
function performSearch() {
    const searchInput = document.getElementById('searchInput');
    const query = searchInput.value.trim();
    if (query) {
        window.location.hash = `#/search/${encodeURIComponent(query)}`;
    }
}

// Add Enter key support for search
document.addEventListener('DOMContentLoaded', () => {
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
            const searchInput = document.getElementById('searchInput');
            if (searchInput && document.activeElement === searchInput) {
                performSearch();
            }
        }
    });
});

// Initialize the application
const app = new App();